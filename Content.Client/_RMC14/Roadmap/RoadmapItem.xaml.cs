using Content.Client.Message;
using Robust.Client.AutoGenerated;
using Robust.Client.Graphics;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.XAML;

namespace Content.Client._RMC14.Roadmap;

[GenerateTypedNameReferences]
public sealed partial class RoadmapItem : Control
{
    private RoadmapItemState _itemState;

    public RoadmapItemState ItemState
    {
        get => _itemState;
        set
        {
            _itemState = value;
            var panel = (StyleBoxFlat) StateColor.PanelOverride!;
            panel.BackgroundColor = _itemState switch
            {
                RoadmapItemState.Planned => Color.Red,
                RoadmapItemState.InProgress => Color.FromHex("#20C9FF"),
                RoadmapItemState.Partial => Color.Yellow,
                RoadmapItemState.Complete => Color.Green,
                _ => Color.Transparent
            };

            StateText.Text = _itemState switch
            {
                RoadmapItemState.Planned => "PLANNED",
                RoadmapItemState.InProgress => "IN PROGRESS",
                RoadmapItemState.Partial => "PARTIALLY IMPLEMENTED",
                RoadmapItemState.Complete => "COMPLETE",
                _ => string.Empty
            };
            StateText.ModulateSelfOverride = panel.BackgroundColor;
        }
    }

    public string? HeaderText
    {
        get => HeaderButton.Text;
        set => HeaderButton.Text = value;
    }

    public string? Text
    {
        get => Contents.GetMessage();
        set => Contents.SetMarkup($"[font size=11]{value ?? string.Empty}[/font]");
    }

    public RoadmapItem()
    {
        RobustXamlLoader.Load(this);
        HeaderButton.OnPressed += _ => ContentsContainer.Visible = !ContentsContainer.Visible;
    }
}
