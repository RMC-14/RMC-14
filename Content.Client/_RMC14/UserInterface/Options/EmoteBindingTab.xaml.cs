using System.Linq;
using Content.Client.Options.UI;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Content.Shared.CCVar;
using Content.Shared.Chat.Prototypes;
using Content.Shared.Speech.Components;
using Robust.Shared.Prototypes;

namespace Content.Client._RMC14.UserInterface.Options;

[GenerateTypedNameReferences]
public sealed partial class EmoteBindingTab : ScrollContainer
{
    [Dependency] private readonly IPrototypeManager _prototypeManager = default!;

    public List<OptionDropDownCVar<string>.ValueOption> HumanoidEmoteDropdownOptions = [];
    public List<OptionDropDownCVar<string>.ValueOption> XenoEmoteDropdownOptions = [];

    public EmoteBindingTab()
    {
        IoCManager.InjectDependencies(this);
        RobustXamlLoader.Load(this);
        UpdateDropdowns();
    }

    public void UpdateDropdowns()
    {
        // Get all emotes that are "spoken"
        var emoteProtos = _prototypeManager
            .EnumeratePrototypes<EmotePrototype>()
            .Where(emote => emote.Category == EmoteCategory.Vocal);

        // Filter emotes to Humanoid and Xeno lists
        HumanoidEmoteDropdownOptions.Add(new OptionDropDownCVar<string>.ValueOption(Loc.GetString("rmc-ui-emote-binding-none"), "None"));
        XenoEmoteDropdownOptions.Add(new OptionDropDownCVar<string>.ValueOption(Loc.GetString("rmc-ui-emote-binding-none"), "None"));
        foreach (var emoteProto in emoteProtos)
        {
            if (emoteProto.Whitelist == null || emoteProto.Whitelist.Components == null) {continue;}
            if (emoteProto.Whitelist.Components.Contains("Vocal"))
            {
                HumanoidEmoteDropdownOptions.Add(
                    new OptionDropDownCVar<string>.ValueOption(Loc.GetString(emoteProto.Name), emoteProto.ID)
                );
            }
            else if (emoteProto.Whitelist.Components.Contains("Xeno"))
            {
                XenoEmoteDropdownOptions.Add(
                    new OptionDropDownCVar<string>.ValueOption(Loc.GetString(emoteProto.Name), emoteProto.ID)
                );
            }
        }

        // Add emotes to dropdowns
        Control.AddOptionDropDown(CCVars.AdminPlayerTabSymbolSetting, DropDownHumanoidEmote1, HumanoidEmoteDropdownOptions);
        Control.AddOptionDropDown(CCVars.AdminPlayerTabSymbolSetting, DropDownHumanoidEmote2, HumanoidEmoteDropdownOptions);
        Control.AddOptionDropDown(CCVars.AdminPlayerTabSymbolSetting, DropDownHumanoidEmote3, HumanoidEmoteDropdownOptions);
        Control.AddOptionDropDown(CCVars.AdminPlayerTabSymbolSetting, DropDownHumanoidEmote4, HumanoidEmoteDropdownOptions);
        Control.AddOptionDropDown(CCVars.AdminPlayerTabSymbolSetting, DropDownHumanoidEmote5, HumanoidEmoteDropdownOptions);
        Control.AddOptionDropDown(CCVars.AdminPlayerTabSymbolSetting, DropDownHumanoidEmote6, HumanoidEmoteDropdownOptions);
        Control.AddOptionDropDown(CCVars.AdminPlayerTabSymbolSetting, DropDownHumanoidEmote7, HumanoidEmoteDropdownOptions);
        Control.AddOptionDropDown(CCVars.AdminPlayerTabSymbolSetting, DropDownHumanoidEmote8, HumanoidEmoteDropdownOptions);

        Control.AddOptionDropDown(CCVars.AdminPlayerTabSymbolSetting, DropDownXenoEmote1, XenoEmoteDropdownOptions);
        Control.AddOptionDropDown(CCVars.AdminPlayerTabSymbolSetting, DropDownXenoEmote2, XenoEmoteDropdownOptions);
        Control.AddOptionDropDown(CCVars.AdminPlayerTabSymbolSetting, DropDownXenoEmote3, XenoEmoteDropdownOptions);
        Control.AddOptionDropDown(CCVars.AdminPlayerTabSymbolSetting, DropDownXenoEmote4, XenoEmoteDropdownOptions);
        Control.AddOptionDropDown(CCVars.AdminPlayerTabSymbolSetting, DropDownXenoEmote5, XenoEmoteDropdownOptions);
        Control.AddOptionDropDown(CCVars.AdminPlayerTabSymbolSetting, DropDownXenoEmote6, XenoEmoteDropdownOptions);
        Control.AddOptionDropDown(CCVars.AdminPlayerTabSymbolSetting, DropDownXenoEmote7, XenoEmoteDropdownOptions);
        Control.AddOptionDropDown(CCVars.AdminPlayerTabSymbolSetting, DropDownXenoEmote8, XenoEmoteDropdownOptions);

        Control.Initialize();
    }
}
